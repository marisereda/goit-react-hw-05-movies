{"version":3,"file":"static/js/221.35b8bfb9.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieGallery/MovieGallery.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","utils/movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-radius: ${p => p.theme.radii.primary};\n  box-shadow: ${p => p.theme.shadows.primary};\n  overflow: hidden;\n  cursor: pointer;\n  transform: scale(1);\n  transition: ${p => p.theme.styles.transition};\n\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  display: inline-block;\n  font-size: ${p => p.theme.fontSizes.title};\n  font-weight: bold;\n`;\n\nexport const Votes = styled.p`\n  display: inline-block;\n  margin-left: auto;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.title};\n  font-weight: bold;\n  color: white;\n  border-radius: ${p => p.theme.radii.primary};\n  background-color: ${p => p.theme.colors.bgDark};\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport { Item, Image, Title, Votes } from './MovieCard.styled';\n\nconst MovieCard = ({ id, title, posterPath, votes }) => {\n  const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  const path = location.pathname === '/movies' ? `${id}` : `movies/${id}`;\n  return (\n    <Item>\n      <Link\n        to={path}\n        state={{ from: `${location.pathname + location.search}` }}\n      >\n        <Image src={BASE_URL + posterPath} alt={`Poster ${title}`} />\n        <Box\n          display=\"flex\"\n          height=\"titleBlock\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          padding={4}\n          as=\"div\"\n        >\n          <Title>{title}</Title>\n          <Votes>{votes.toFixed(1)}</Votes>\n        </Box>\n      </Link>\n    </Item>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  posterPath: PropTypes.string,\n  votes: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport MovieCard from 'components/MovieCard';\n\nconst MovieGallery = ({ movies }) => {\n  return (\n    <Box\n      display=\"grid\"\n      gridTemplateColumns=\"1fr 1fr 1fr 1fr\"\n      gridGap={5}\n      as=\"ul\"\n    >\n      {movies.map(({ id, title, poster_path, vote_average }) => (\n        <MovieCard\n          key={id}\n          id={id}\n          title={title}\n          posterPath={poster_path}\n          votes={vote_average}\n        ></MovieCard>\n      ))}\n    </Box>\n  );\n};\n\nexport default MovieGallery;\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  display: block;\n  padding: ${p => p.theme.space[6]}px;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.title};\n`;\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Box } from 'components/Box';\nimport MovieGallery from 'components/MovieGallery';\nimport Loader from 'components/Loader';\nimport { PageTitle } from './Home.styled';\nimport { getTrendingMovies } from 'utils';\n\nconst STATUS = {\n  idle: 0,\n  pending: 1,\n  resolved: 2,\n  rejected: 3,\n};\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  // -------------------------------------------------\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    async function getMovies() {\n      try {\n        const trendingMovies = await getTrendingMovies({ signal });\n        setStatus(STATUS.resolved);\n\n        setTrendingMovies(trendingMovies);\n      } catch (error) {\n        setStatus(STATUS.rejected);\n        toast(error.message);\n      }\n    }\n    getMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  // -------------------------------------------------\n  return (\n    <Box backgroundColor=\"bgMain\" minHeight=\"100vh\" as=\"main\">\n      <Box\n        width=\"container\"\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        paddingTop={4}\n        paddingBottom={5}\n        paddingLeft={3}\n        paddingRight={3}\n      >\n        <PageTitle>Trending today</PageTitle>\n\n        {status === STATUS.pending && <Loader />}\n        {trendingMovies.length !== 0 && (\n          <MovieGallery movies={trendingMovies} />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { API_TOKEN, BASE_URL } from 'constants';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers.common['Authorization'] = `Bearer ${API_TOKEN}`;\n\n// -------------------------------------------------\nexport async function getMovieCast({ id, signal }) {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      signal,\n    });\n    if (!response) {\n      throw Error('We are sorry! There is no cast information about the movie');\n    }\n\n    return response.data.cast;\n  } catch (error) {\n    if (error.name === 'CanceledError') {\n      return null;\n    }\n    if (error.response || error.request) {\n      throw Error('There is no server response. Try later again!');\n    } else {\n      throw error;\n    }\n  }\n}\n\n// -------------------------------------------------\nexport async function getMovieDetails({ id, signal }) {\n  try {\n    const response = await axios.get(`movie/${id}`, { signal });\n    if (!response) {\n      throw Error(\n        'We are sorry! There is no detailed information about the movie'\n      );\n    }\n\n    return response.data;\n  } catch (error) {\n    if (error.name === 'CanceledError') {\n      return null;\n    }\n    if (error.response || error.request) {\n      throw Error('There is no server response. Try later again!');\n    } else {\n      throw error;\n    }\n  }\n}\n\n// -------------------------------------------------\nexport async function getMovies({ page = 1, search = '', signal }) {\n  let params = {\n    page: page,\n    query: search,\n  };\n\n  try {\n    const response = await axios.get('search/movie', { params, signal });\n    if (response.data.results.length === 0) {\n      throw Error('There is no any match on your request!');\n    }\n\n    return response.data.results;\n  } catch (error) {\n    if (error.name === 'CanceledError') {\n      return [];\n    }\n    if (error.response || error.request) {\n      throw Error('There is no server response. Try later again!');\n    } else {\n      throw error;\n    }\n  }\n}\n\n// -------------------------------------------------\nexport async function getReviews({ id, signal }) {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, { signal });\n    if (!response) {\n      throw Error('There is no cast information about the movie');\n    }\n\n    return response.data.results;\n  } catch (error) {\n    if (error.name === 'CanceledError') {\n      return null;\n    }\n    if (error.response || error.request) {\n      throw Error('There is no server response. Try later again!');\n    } else {\n      throw error;\n    }\n  }\n}\n\n// -------------------------------------------------\nexport async function getTrendingMovies({ signal, page = 1 }) {\n  let params = {\n    page: page,\n  };\n\n  try {\n    const response = await axios.get('trending/movie/day', { params, signal });\n    if (response.data.results.length === 0) {\n      throw Error('There is no any match on your request!');\n    }\n\n    return response.data.results;\n  } catch (error) {\n    if (error.name === 'CanceledError') {\n      return [];\n    }\n    if (error.response || error.request) {\n      throw Error('There is no server response. Try later again!');\n    } else {\n      throw error;\n    }\n  }\n}\n"],"names":["Item","styled","p","theme","radii","primary","shadows","styles","transition","Image","Title","fontSizes","title","Votes","space","colors","bgDark","id","posterPath","votes","location","useLocation","path","pathname","to","state","from","search","src","alt","Box","display","height","alignItems","justifyContent","padding","as","toFixed","movies","gridTemplateColumns","gridGap","map","poster_path","vote_average","PageTitle","STATUS","useState","trendingMovies","setTrendingMovies","status","setStatus","useEffect","controller","AbortController","signal","getTrendingMovies","toast","message","getMovies","abort","backgroundColor","minHeight","width","marginLeft","marginRight","paddingTop","paddingBottom","paddingLeft","paddingRight","Loader","length","MovieGallery","getMovieCast","axios","response","Error","data","cast","name","request","getMovieDetails","page","params","query","results","getReviews","BASE_URL","API_TOKEN"],"sourceRoot":""}